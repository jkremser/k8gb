/*
Copyright 2021 The k8gb Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/
package utils

import (
	"fmt"
	"sort"

	"github.com/lixiangzhong/dnsutil"
)

// Dig retrieves list of tuple <IP address, A record > from edge DNS server for specific FQDN
func Dig(edgeDNSServer, fqdn string) ([]string, error) {
	return DigWithBackup(edgeDNSServer, "", fqdn)
}

func DigWithBackup(edgeDNSServer, backupDNSServer, fqdn string) ([]string, error) {
	var dig dnsutil.Dig
	if edgeDNSServer == "" {
		return nil, fmt.Errorf("empty edgeDNSServer")
	}
	err := dig.SetDNS(edgeDNSServer)
	if err != nil {
		err = fmt.Errorf("dig error: can't set query dns (%s) with error(%s)", edgeDNSServer, err)
		return nil, err
	}
	if backupDNSServer != "" {
		err := dig.SetBackupDNS(backupDNSServer)
		if err != nil {
			err = fmt.Errorf("dig error: can't set dns backup server (%s) with error(%s)", backupDNSServer, err)
			return nil, err
		}
	}
	a, err := dig.A(fqdn)
	if err != nil {
		err = fmt.Errorf("dig error: can't dig fqdn(%s) with error(%s)", fqdn, err)
		return nil, err
	}
	var IPs []string
	for _, ip := range a {
		IPs = append(IPs, fmt.Sprint(ip.A))
	}
	sort.Strings(IPs)
	return IPs, nil
}
